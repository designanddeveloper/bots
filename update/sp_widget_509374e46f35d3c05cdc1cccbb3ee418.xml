<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope,$rootScope,$timeout, spUtil, $location, spAriaFocusManager) {
	
	$scope.$on('data_table.click', function(e, parms){
		var p = $scope.data.page_id || 'form';
		var s = {id: p, table: parms.table, sys_id: parms.sys_id, view: 'sp'};
		var newURL = $location.search(s);
		spAriaFocusManager.navigateToLink(newURL.url());
	});
	
	var c = this;
 
	c.refresh = function() {
		c.data.action = "refresh";
		
		c.server.update().then(function(response) {
//			alert('###='+c.data.table_label);
		  c.data.action = undefined;

			var widgetParams = {
		    table: c.data.table,
		    fields: c.data.field_list,
		    o: c.data.o,
		    d: c.data.d,
		    filter: c.data.filter,
		    window_size: c.data.window_size,
		    view: 'sp',
		    title: c.data.title,
		    show_breadcrumbs: true,
				enable_filter: true
	    };
    spUtil.get('widget-data-table', widgetParams).then(function(response) {
       c.data.dataTableWidget = response;
			// extremely important: set this flag for the inner widget!
			// or the breadcrumbs will disappear after refreshing
			 c.data.dataTableWidget.options.show_breadcrumbs = true;
			$rootScope.$broadcast('setReport', '');
    });
	});

}
	
  $rootScope.$on('setLimit', function(event, data) {
//    alert('$$$ data='+data);
		var limits = data.split(";");
		c.data.fy=limits[0];
		c.data.limit_lower = limits[1];
		c.data.limit_upper = limits[2];
		c.data.mode = "limit";
		c.refresh();
  });
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,filter,field_list,maximum_entries,order_by,order_direction,title,color,glyph,sp_page</field_list>
        <has_preview>false</has_preview>
        <id>data-table-exp</id>
        <internal>false</internal>
        <link/>
        <name>Data Table Exp</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	/*  "use strict"; - linter issues */
	// populate the 'data' object
	
	var sp_page = $sp.getValue('sp_page');
	var pageGR = new GlideRecord('sp_page');
	pageGR.get(sp_page);
	data.page_id = pageGR.id.getDisplayValue();
	$sp.getValues(data);
	if (data.field_list) {
		data.fields_array = data.field_list.split(',');
	} else {
		data.field_list = $sp.getListColumns(data.table);
	}

	var fy="";
	var limit_lower = '250000'; // default values
	var limit_upper = '';
	var action = ""; // action
	var mode = "";
	if (input) {
		data.p = input.p;
		data.o = input.o;
		data.d = input.d;
		data.q = input.q;
		
		if (input.action == "refresh") {
			mode = input.mode;
			if (mode=="limit") {
			 limit_lower = input.limit_lower;
			 limit_upper = input.limit_upper;
			}
			fy = input.fy;
			}		
		action = input.action;
	}
	if (limit_lower=="")
		limit_lower = "0";
	data.p = data.p || 1;
	data.o = data.o || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('order_direction');

	data.page_index = (data.p - 1);
	data.window_size = $sp.getValue('maximum_entries') || 10;
	data.window_start  = (data.page_index * data.window_size);
	data.window_end = (((data.page_index + 1) * data.window_size));
	data.filter = $sp.getValue("filter");
	// generate filter dynamically
	if (mode=='limit') {
	data.filter = data.filter.replace(/USD;[0-9]*/, "USD;"+limit_lower);
	//data.filter = "total_cost>=javascript:global.getCurrencyFilter('x_63474_bots_bots_requests','total_cost', 'USD;"+limit+"')^state!=3";
	if (limit_upper!='')
		data.filter +="^total_cost<=javascript:global.getCurrencyFilter('x_63474_bots_bots_requests','total_cost', 'USD;"+limit_upper+"')";
	}
		if (fy!='') {
			// already has the FY sub-filter - replace the years only
			if (data.filter.includes("closed_atBETWEEN")) {
		    data.filter = data.filter.replace(/[0-9]*-07-01/, fy+"-07-01");
		    data.filter = data.filter.replace(/[0-9]*-06-30/, String(Number(fy)+1)+"-06-30");
			}
			// no FY sub-filter, add a new one
			else {
				data.filter = "closed_atBETWEENjavascript:gs.dateGenerate('"+fy+
					"-07-01','00:00:00')@javascript:gs.dateGenerate('"+String(Number(fy)+1)+
					"-06-30','23:59:59')"+(data.filter.length>0 ? "^":"")+data.filter;
			}
		}
		// all fiscal years
		else {
			// remove the FY sub-filter
			data.filter = data.filter.replace(/closed_atBETWEEN.*[\^|\b]/,'');
		}

	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}
	data.table_label = gr.getLabel();
	data.limit_lower = limit_lower;
	data.title = options.title;
	if (mode=="limit") {
		if (fy!='')
		  data.title = "Requests for FY"+(parseInt(fy)+1);
		else
			data.title = "Requests for all FYs";		
	data.title += ", >= $"+
									limit_lower.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	if (limit_upper!='')
		data.title += " and <= $"+limit_upper.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	}
	
	// important: custom widget - generate them on the server for the first time
	// then have the client get them from spUtil
	// if it is not refresh - update the widget from the server
	// refresh will update the widget from the client
	if (action!='refresh') {
	var widgetParams = {
		table: data.table,
		fields: data.field_list,
		o: data.o,
		d: data.d,
		filter: data.filter,
		window_size: data.window_size,
		view: 'sp',
		title: data.title,//options.title,
		show_breadcrumbs: true,
		enable_filter: true
	};
	data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>dyak</sys_created_by>
        <sys_created_on>2018-04-27 15:17:08</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>509374e46f35d3c05cdc1cccbb3ee418</sys_id>
        <sys_mod_count>190</sys_mod_count>
        <sys_name>Data Table Exp</sys_name>
        <sys_package display_value="BOTS - New" source="x_63474_bots">fca917c14f111300cb281b818110c713</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="BOTS - New">fca917c14f111300cb281b818110c713</sys_scope>
        <sys_update_name>sp_widget_509374e46f35d3c05cdc1cccbb3ee418</sys_update_name>
        <sys_updated_by>sdepally</sys_updated_by>
        <sys_updated_on>2018-06-14 16:23:28</sys_updated_on>
        <template><![CDATA[<div>
  <div class="alert alert-danger" ng-if="data.invalid_table">
    ${Table not defined} '{{data.table_label}}'
  </div>
  <sp-widget ng-if="data.dataTableWidget" widget="data.dataTableWidget"></sp-widget>
</div>]]></template>
    </sp_widget>
</record_update>
